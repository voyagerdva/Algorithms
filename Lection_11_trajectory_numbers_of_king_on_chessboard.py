# ==================================================
#
#   Lection 11.
#   Trajectoryes number for reach some cell on chessboard with
#   N rows and M collumns by king, if he can move only to right,
#   down and to right-down.
#
#   asymptotics: O(N*M)
#
# ==================================================

""" 
    суть алгоритма - подсчет способов достижения заданной
    позиции на числовой плоскости с координатами M и N путем
    циклического суммирования количеств способов достижения каждой проходимой позиции
    с количествами способов достижения трех предыдущих позиций сверху, слева и сверху-слева. 

"""
def trajNumKing(N, M):
    """
    Второстепенная часть. Подготавливает двумерный список размером M на N
    с нулевыми элементами"""
    K = [[0]*M for i in range(N)]

    """
    второстепенная часть. Задает значения элементам списка в первой строке 
    и в первом столбце. До каждого из этих элементов есть только 1 способ добраться"""
    for i in range(N):
        K[i][0] = 1
    for j in range(M):
        K[0][j] = 1

    """
    сам массив - второстепенная часть алгоритма.
    тело массива - основная часть. Где для текущей позиции происходит суммирование
    количеств траекторий достижения трех предыдущих позиций"""
    for i in range(1, N):
        for j in range(1, M):
            K[i][j] = K[i-1][j] + K[i][j-1] + K[i-1][j-1]

    return K[N-1][M-1]

print(trajNumKing(20, 10))